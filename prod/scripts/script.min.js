"use strict";!function(){var e,t,o,n,i,c,l,r,u,s,m,a,d,_,v;window.onload=function(){document.getElementById("preloader").style.display="none"},e=document.querySelector(".mobile-menu__btn"),t=document.querySelector(".mobile-menu__item"),o=document.querySelector(".mobile-menu__item_second"),n=document.querySelector(".mobile-menu__item_third"),i=document.querySelector(".mobile-menu__profile"),c=document.querySelector(".about"),l=document.querySelector(".mobile-menu__works"),r=document.querySelector(".works"),u=document.querySelector(".mobile-menu__skills"),s=document.querySelector(".skills"),m=document.querySelector(".mobile-menu__git"),a=document.querySelector(".git"),d=document.querySelector(".mobile-menu__linkid"),_=document.querySelector(".mobile-menu__mail"),v=document.querySelector(".mobile-menu__phone"),e.addEventListener("click",function(){i.classList.toggle("mobile-menu__active"),l.classList.toggle("mobile-menu__active"),u.classList.toggle("mobile-menu__active"),m.classList.toggle("mobile-menu__active"),d.classList.toggle("mobile-menu__active"),_.classList.toggle("mobile-menu__active"),v.classList.toggle("mobile-menu__active"),t.classList.toggle("mobile-menu__item-active"),o.classList.toggle("mobile-menu__item_second-active"),n.classList.toggle("mobile-menu__item_third-active")}),i.addEventListener("click",function(){c.scrollIntoView({block:"start",behavior:"smooth"})}),l.addEventListener("click",function(){r.scrollIntoView({behavior:"smooth"})}),u.addEventListener("click",function(){s.scrollIntoView({block:"start",behavior:"smooth"})}),m.addEventListener("click",function(){a.scrollIntoView({block:"start",behavior:"smooth"})}),fetch("https://api.github.com/users/".concat("aldeowl","/repos")).then(function(e){return e.json()}).then(function(e){var i=[];return e.map(function(e){var t=e.name,o=e.html_url,n=e.description;i.push({name:t,html_url:o,description:n})}),i}).then(function(e){e.forEach(function(e){!function(e,t,o){var n=document.querySelector(".git__list"),i=document.createElement("div");i.classList.add("git__item");var c=document.createElement("a");c.classList.add("git__item-title"),c.setAttribute("target","_blank");var l=document.createElement("p");l.classList.add("git__item-text"),c.innerHTML=e,c.setAttribute("href",t),l.innerHTML=o,i.appendChild(c),i.appendChild(l),n.appendChild(i)}(e.name,e.html_url,e.description)})}),function(){var e=document.querySelector("#footerAboutMe"),t=document.querySelector(".about");e.addEventListener("click",function(){t.scrollIntoView({behavior:"smooth"})});var o=document.querySelector("#myworks"),n=document.querySelector("#footerWorks"),i=document.querySelector(".works");o.addEventListener("click",function(){i.scrollIntoView({behavior:"smooth"})}),n.addEventListener("click",function(){i.scrollIntoView({behavior:"smooth"})});var c=document.querySelector("#skills"),l=document.querySelector("#footerSkills"),r=document.querySelector(".skills");c.addEventListener("click",function(){r.scrollIntoView({behavior:"smooth"})}),l.addEventListener("click",function(){r.scrollIntoView({behavior:"smooth"})});var u=document.querySelector("#git"),s=document.querySelector("#footerGit"),m=document.querySelector(".git");u.addEventListener("click",function(){m.scrollIntoView({behavior:"smooth"})}),s.addEventListener("click",function(){m.scrollIntoView({behavior:"smooth"})})}()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
